import Router from 'koa-router'
import React from 'react'
import path from 'path'
import { Provider } from 'react-redux'
import { renderToString } from 'react-dom/server'
import { StaticRouter } from 'react-router'
import { matchRoutes, renderRoutes } from 'react-router-config'
import { ChunkExtractor } from '@loadable/server'

import routes from '../client/app/routes'
import configureStore from '../client/app/store/configureStore'

const router = new Router()

router.get('/*', async ctx => {
  const location = ctx.url
  const branches = matchRoutes(routes, location)
  const { store } = configureStore(location)

  const promises = branches.map(({ route }) => {
    const fetchData = route && route.fetchData

    return fetchData instanceof Function
      ? fetchData(store)
      : Promise.resolve(null)
  })

  await Promise.all(promises)

  const context = {}

  // This is the stats file generated by webpack loadable plugin
  const statsFile = path.resolve(
    __dirname,
    '../public/dist/client/loadable-stats.json'
  )
  // We create an extractor from the statsFile
  const extractor = new ChunkExtractor({ statsFile })
  // Wrap your application using "collectChunks"
  const jsx = extractor.collectChunks(
    <Provider store={store}>
      <StaticRouter location={location} context={context}>
        {renderRoutes(routes)}
      </StaticRouter>
    </Provider>
  )

  const html = renderToString(jsx)

  // You can now collect your script tags
  const scriptTags = extractor.getScriptTags() // or extractor.getScriptElements();
  // You can also collect your "preload/prefetch" links
  const linkTags = extractor.getLinkTags() // or extractor.getLinkElements();
  // And you can even collect your style tags (if you use "mini-css-extract-plugin")
  const styleTags = extractor.getStyleTags() // or extractor.getStyleElements();

  if (context.status === 404) {
    await ctx.status(404)
  }

  if (context.status === 302) {
    await ctx.redirect(302, context.url)
  }

  ctx.body = `
  <!DOCTYPE html>
  <html>
    <head>
    <title></title>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width initial-scale=1">
    <link rel="shortcut icon" href="/favicon.ico" type="image/x-icon">
    ${linkTags}
    ${styleTags}
    </head>
    <body>
      <div id="root">${html}</div>
      <script>
        window.__PRELOADED_STATE__ = ${JSON.stringify(store.getState(), null)}
      </script>
      ${scriptTags}
    </body>
  </html>`

  // await ctx.render('index', {
  //   html,
  //   state: store.getState(),
  //   title: 'React Redux HMR SSR Starter Kit',
  //   production: process.env.NODE_ENV === 'production',
  // })
})

module.exports = router
